load("@rules_java//java:defs.bzl", "java_library", "java_test")

java_library(
    name = "main",
    srcs = glob(["src/**/*.java"]),
    resources = glob(["resources/**"]),
    visibility = ["//visibility:public"],
    deps = [
        "//core_interfaces:main",
        "//core_utils:main",
        "//crypto:main",
        "//database:main",
        "//feature_flag:main",
        "//forms:main",
        "//geo:main",
        "//google_cloud:main",
        "//heartbeat:main",
        "//integrations/db:main",
        "//integrations/speed_test:main",
        "//json:main",
        "//lambda:main",
        "//logger:main",
        "//logging:main",
        "//markdown:main",
        "//micrometer:main",
        "//port_forwarder:main",
        "//secrets/common:main",
        "//secrets/system:main",
        "//ssh:main",
        "//trident_storage:main",
        "//util:main",
        "//utils/serializers:main",
        "//utils/time:main",
        "//verification:main",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
        "@maven//:com_google_guava_guava",
        "@maven//:com_intellij_annotations",
        "@maven//:com_walkmind_extensions_collections",
        "@maven//:com_zaxxer_HikariCP",
        "@maven//:commons_codec_commons_codec",
        "@maven//:io_micrometer_micrometer_core",
        "@maven//:io_netty_netty_buffer",
        "@maven//:io_opentelemetry_opentelemetry_api",
        "@maven//:io_opentelemetry_opentelemetry_api_trace",
        "@maven//:io_opentelemetry_opentelemetry_extension_annotations",
    ],
)

java_test(
    name = "tests",
    size = "large",
    timeout = "eternal",
    srcs = glob(
        include = [
            "test/com/example/integrations/sql_server/ChangeEntrySerializerSpec.java",
            "test/com/example/integrations/sql_server/SqlServerEndToEndCdcSpec.java",
            "test/com/example/integrations/sql_server/SqlServerImporterSpec.java",
            "test/com/example/integrations/sql_server/SqlServerIncrementalUpdaterSpec.java",
            "test/com/example/integrations/sql_server/SqlServerInformerSpect.java"
            ],
        exclude = ["test/com/example/integrations/sql_server/e2e/*.java"],
    ),
    resources = glob([
        "test-resources/**",
        "v3/test-resources/**",
    ]),
    tags = ["sql_server_flaky_tests"],
    test_class = "com.example.testing.RunAllSpecs",
    deps = [
        ":main",
        "//core_implementation:main",
        "//core_interfaces:main",
        "//core_mocks:main",
        "//crypto:main",
        "//dockerized/sql_server:main",
        "//feature_flag:main",
        "//fire:main",
        "//google_cloud:main",
        "//integrations/db:main",
        "//integrations/db:tests-library",
        "//json:main",
        "//logger:main",
        "//metal:main",
        "//port_forwarder:main",
        "//testing:main",
        "//trident_storage:main",
        "//utils/time:main",
        "@maven//:com_amazonaws_aws_java_sdk_test_utils",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
        "@maven//:com_google_guava_guava",
        "@maven//:com_walkmind_extensions_collections",
        "@maven//:junit_junit",
        "@maven//:org_awaitility_awaitility",
        "@maven//:org_hamcrest_hamcrest",
        "@maven//:org_mockito_mockito_core",
    ],
)

java_test(
    name = "bench",
    size = "large",
    srcs = glob([
        "bench/**/*.java",
        "test/**/SqlServerTestDb.java",
        "test/**/SqlServerRowHelper.java",
    ]),
    resources = glob(["test-resources/**"]),
    tags = [
        "benchmark",
        "exclusive",  # run this test with no other actions
        "external",  # no caching
    ],
    test_class = "com.example.testing.RunAllBench",
    deps = [
        ":main",
        "//core_interfaces:main",
        "//dockerized/sql_server:main",
        "//feature_flag:main",
        "//integrations/db:main",
        "//integrations/db:tests-library",
        "@maven//:junit_junit",
        "@maven//:org_hamcrest_hamcrest",
    ],
)

java_test(
    name = "build_regression_sqlserver",
    timeout = "eternal",  # 60 minutes
    srcs = glob(["test/com/example/integrations/sql_server/e2e/*.java"]),
    tags = ["build_regression"],
    test_class = "com.example.testing.RunAllSpecs",
    deps = [
        ":main",
        "//core_implementation:main",
        "//core_interfaces:main",
        "//feature_flag:main",
        "//fire:main",
        "//metal:main",
        "@maven//:com_amazonaws_aws_java_sdk_test_utils",
    ],
)